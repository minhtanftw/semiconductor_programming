1.assign
+ Dùng ngoài always block
+tạo continous block (gán liên tục)
+chỉ dùng cho wire(verilog) hay logic(systemverilog)
+luôn chạy song song:bất cứ khi nào vế phải thay đổi , vế trái cũng thay đổi
Example:
wire c;
assign c = a &b;

2.= (block assign)
+Dùng trong always block(hoặc initial)
+Blocking nghĩa là lệnh phải hoàn thành mới thực hiện lệnh tiếp theo(giống code C)
+Chỉ dùng cho mạch combinational

always_comb begin
    y = a & b;
end
3. <= (non-blocking assign)
+Dùng trong alway_ff hoặc always@(posedge clk)
+Non-blocking nghĩa là tất cả trong block ghi nhớ giá trị rồi cập nhật lúc ở cuối kì
+Dùng để mô tả mạch tuần tự(sequential circuit - flipflop,register)- > tránh lỗi race condition

always_ff(posedge clk) begin
q <= d;
end 

always_comb dùng để mô tả mạch combinational

always_comb begin
y = a & b;
end

giống với always@(*) trong verilog truyền thống
Tự động hiểu mọi tín hiệu trong block là tín hiệu sensitive list
ví dụ:
module mux2to1(input logic a,b,sel,
                output logic y);
    always_comb begin
    if (sel)
    y = a;
    else
    y= b;
    end
endmodule 

always_comb dam bao y luon duoc cap nhat gia tri khi a,b,sel thay doi.








#tai sao 